{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","select","good","setState","oldState","remove","filter","elem","getTitle","goods","title","length","splice","join","clear","this","className","type","onClick","map","selected","includes","classNames","sel","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,cAAe,CAAC,QAFpB,EAKEC,OAAS,SAACC,GACR,EAAKC,UAAS,SAAAC,GAAQ,MAAK,CACzBJ,cAAc,GAAD,mBAAMI,EAASJ,eAAf,CAA8BE,SAPjD,EAWEG,OAAS,SAACH,GACR,EAAKC,UAAS,SAAAC,GAAQ,MAAK,CACzBJ,cAAeI,EAASJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,UAbpE,EAiBEM,SAAW,SAACC,GACV,IAAIC,EAAQ,GAEZ,OAAQD,EAAME,QACZ,KAAM,EACJD,EAAQ,oBACR,MAEF,KAAM,EACJA,EAAK,UAAMD,EAAM,GAAZ,gBACL,MAEF,QACE,MAAM,GAAN,OAAU,YAAIA,GAAOG,OAAO,EAAGH,EAAME,OAAS,GAAGE,KAAK,MAAtD,gBAAmEJ,EAAMA,EAAME,OAAS,GAAxF,iBAGJ,OAAOD,GAjCX,EAoCEI,MAAQ,WACN,EAAKX,SAAS,CAAEH,cAAe,MArCnC,4CAwCE,WAAU,IAAD,OACCA,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,MAAf,UACGhB,EAAcW,OAAS,GACtB,wBACEM,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,MAHhB,eAQF,+BACG,SAEH,oBAAIE,UAAU,QAAd,SACGD,KAAKP,SAASR,KAEjB,oBAAIgB,UAAU,KAAd,SACGnB,EAAgBsB,KAAI,SAAAjB,GACnB,IAAMkB,EAAWpB,EAAcqB,SAASnB,GAExC,OACE,qBAEEc,UAAWM,IAAW,eAAgB,CACpCC,IAAKH,IAHT,UAMGlB,EACD,qBAAKc,UAAU,SAAf,SACE,wBACEC,KAAK,SACLD,UAAWM,IAAW,YAAa,CACjC,YAAaF,IAEfF,QAASE,EACL,kBAAM,EAAKf,OAAOH,IAClB,kBAAM,EAAKD,OAAOC,IAPxB,SASGkB,EAAW,SAAW,eAhBtBlB,eAlErB,GAAyBsB,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.613cce63.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  select = (good: string) => {\n    this.setState(oldState => ({\n      selectedGoods: [...oldState.selectedGoods, good],\n    }));\n  };\n\n  remove = (good: string) => {\n    this.setState(oldState => ({\n      selectedGoods: oldState.selectedGoods.filter(elem => elem !== good),\n    }));\n  };\n\n  getTitle = (goods: string[]) => {\n    let title = '';\n\n    switch (goods.length) {\n      case (0):\n        title = 'No goods selected';\n        break;\n\n      case (1):\n        title = `${goods[0]} is selected`;\n        break;\n\n      default:\n        return `${[...goods].splice(0, goods.length - 1).join(', ')} and ${goods[goods.length - 1]} are selected`;\n    }\n\n    return title;\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button__res\"\n            onClick={this.clear}\n          >\n            x\n          </button>\n        )}\n        <span>\n          {'    '}\n        </span>\n        <h1 className=\"title\">\n          {this.getTitle(selectedGoods)}\n        </h1>\n        <ul className=\"ul\">\n          {goodsFromServer.map(good => {\n            const selected = selectedGoods.includes(good);\n\n            return (\n              <li\n                key={good}\n                className={classNames('not-selected', {\n                  sel: selected,\n                })}\n              >\n                {good}\n                <div className=\"button\">\n                  <button\n                    type=\"button\"\n                    className={classNames('button-55', {\n                      'button-56': selected,\n                    })}\n                    onClick={selected\n                      ? () => this.remove(good)\n                      : () => this.select(good)}\n                  >\n                    {selected ? 'remove' : 'select'}\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}